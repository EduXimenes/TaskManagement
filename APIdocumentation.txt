openapi: 3.0.1
info:
  title: Task Management API
  version: v1
paths:
  /api/performance:
    get:
      tags:
        - Performance
      parameters:
        - name: idUser
          in: query
          style: form
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /GetAllProjects:
    get:
      tags:
        - TaskManagement
      responses:
        '200':
          description: Success
  /GetProject/{idProject}:
    get:
      tags:
        - TaskManagement
      parameters:
        - name: idProject
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /GetTask/{idTask}:
    get:
      tags:
        - TaskManagement
      parameters:
        - name: idTask
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /GetFollowUps:
    get:
      tags:
        - TaskManagement
      responses:
        '200':
          description: Success
  /GetFollowUp/{idFollowUp}:
    get:
      tags:
        - TaskManagement
      parameters:
        - name: idFollowUp
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /GetComments/{idTask}:
    get:
      tags:
        - TaskManagement
      parameters:
        - name: idTask
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /UpdateTask/{idTask}:
    put:
      tags:
        - TaskManagement
      parameters:
        - name: idTask
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: idUser
          in: query
          style: form
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TaskUpdateInputModel'
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/task-management/CreateProject:
    post:
      tags:
        - TaskManagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectInputModel'
      responses:
        '201':
          description: Created
  /api/task-management/CreateTask/{idProject}:
    post:
      tags:
        - TaskManagement
      parameters:
        - name: idProject
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/TaskInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TaskInputModel'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/task-management/AddComment/{idTask}:
    post:
      tags:
        - TaskManagement
      parameters:
        - name: idTask
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: idUser
          in: query
          style: form
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/task-management/DeleteTask/{idTask}:
    delete:
      tags:
        - TaskManagement
      parameters:
        - name: idTask
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/task-management/DeleteProject/{idProject}:
    delete:
      tags:
        - TaskManagement
      parameters:
        - name: idProject
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /GetAllUsers:
    get:
      tags:
        - User
      responses:
        '200':
          description: Success
  /GetUser/{idUser}:
    get:
      tags:
        - User
      parameters:
        - name: idUser
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/user/CreateUser:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UserInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserInputModel'
      responses:
        '201':
          description: Created
  /api/user/DeleteUser/{idUser}:
    delete:
      tags:
        - User
      parameters:
        - name: idUser
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    ProjectInputModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    Role:
      enum:
        - 1
        - 2
      type: integer
      format: int32
    TaskInputModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        expirationDate:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/TaskStatusCode'
        priority:
          $ref: '#/components/schemas/TaskPriority'
      additionalProperties: false
    TaskPriority:
      enum:
        - 1
        - 2
        - 3
      type: integer
      format: int32
    TaskStatusCode:
      enum:
        - 1
        - 2
        - 3
      type: integer
      format: int32
    TaskUpdateInputModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        expirationDate:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/TaskStatusCode'
      additionalProperties: false
    UserInputModel:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/Role'
        name:
          type: string
          nullable: true
      additionalProperties: false
